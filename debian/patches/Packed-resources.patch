Description: Dynamically load packed resources from separate file
 This reduces amount of main memory required for linking stage.
Author: Nicholas Guriev <guriev-ns@ya.ru>
Forwarded: https://github.com/telegramdesktop/tdesktop/pull/8667
Last-Update: Thu, 01 Oct 2020 08:59:43 +0300

--- a/Telegram/CMakeLists.txt
+++ b/Telegram/CMakeLists.txt
@@ -47,7 +47,21 @@ if (WIN32)
     nuget_add_winrt(Telegram)
 endif()
 
-set_target_properties(Telegram PROPERTIES AUTOMOC ON AUTORCC ON)
+set_target_properties(Telegram PROPERTIES AUTOMOC ON)
+if (TDESKTOP_RESOURCES STREQUAL "Bundled")
+    set_target_properties(Telegram PROPERTIES AUTORCC ON)
+elseif (TDESKTOP_RESOURCES STREQUAL "Packed")
+    set(rcc_flags --binary "$<TARGET_PROPERTY:Telegram,AUTORCC_OPTIONS>")
+    set(qrc_files "$<FILTER:$<TARGET_PROPERTY:Telegram,SOURCES>,INCLUDE,\\.qrc$>")
+    target_compile_definitions(Telegram PRIVATE TDESKTOP_USE_PACKED_RESOURCES)
+    target_sources(Telegram PRIVATE "${CMAKE_BINARY_DIR}/tresources.rcc")
+    add_custom_command(OUTPUT "${CMAKE_BINARY_DIR}/tresources.rcc"
+        DEPENDS ${qrc_files}  # FIXME: incomplete dependencies list, missing qrc content
+        COMMAND Qt5::rcc ${rcc_flags} -o "${CMAKE_BINARY_DIR}/tresources.rcc" ${qrc_files}
+        COMMAND_EXPAND_LISTS VERBATIM
+    )
+    set_target_properties(Telegram PROPERTIES RESOURCE "${CMAKE_BINARY_DIR}/tresources.rcc")
+endif()
 
 target_link_libraries(Telegram
 PRIVATE
@@ -1463,7 +1477,11 @@ if (LINUX AND DESKTOP_APP_USE_PACKAGED)
     include(GNUInstallDirs)
     configure_file("../lib/xdg/telegramdesktop.appdata.xml.in" "${CMAKE_CURRENT_BINARY_DIR}/telegramdesktop.appdata.xml" @ONLY)
     generate_appdata_changelog(Telegram "${CMAKE_SOURCE_DIR}/changelog.txt" "${CMAKE_CURRENT_BINARY_DIR}/telegramdesktop.appdata.xml")
-    install(TARGETS Telegram RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}" BUNDLE DESTINATION "${CMAKE_INSTALL_BINDIR}")
+    install(TARGETS Telegram
+        RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
+        BUNDLE DESTINATION "${CMAKE_INSTALL_BINDIR}"
+        RESOURCE DESTINATION "${CMAKE_INSTALL_DATADIR}/TelegramDesktop"
+    )
     install(FILES "Resources/art/icon16.png" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/16x16/apps" RENAME "telegram.png")
     install(FILES "Resources/art/icon32.png" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/32x32/apps" RENAME "telegram.png")
     install(FILES "Resources/art/icon48.png" DESTINATION "${CMAKE_INSTALL_DATAROOTDIR}/icons/hicolor/48x48/apps" RENAME "telegram.png")
--- a/Telegram/Resources/qrc/telegram/telegram.qrc
+++ b/Telegram/Resources/qrc/telegram/telegram.qrc
@@ -68,9 +68,6 @@
     <file alias="recording/info_video_landscape.svg">../../art/recording/recording_info_video_landscape.svg</file>
     <file alias="recording/info_video_portrait.svg">../../art/recording/recording_info_video_portrait.svg</file>
   </qresource>
-  <qresource prefix="/qt-project.org">
-    <file>../qmime/freedesktop.org.xml</file>
-  </qresource>
   <qresource prefix="/misc">
     <file alias="default_shortcuts-custom.json">../../default_shortcuts-custom.json</file>
     <file alias="telegramdesktop.desktop">../../../../lib/xdg/telegramdesktop.desktop</file>
--- a/Telegram/SourceFiles/core/file_utilities.cpp
+++ b/Telegram/SourceFiles/core/file_utilities.cpp
@@ -21,6 +21,7 @@ https://github.com/telegramdesktop/tdesk
 
 #include <QtWidgets/QFileDialog>
 #include <QtCore/QCoreApplication>
+#include <QtCore/QResource>
 #include <QtCore/QStandardPaths>
 #include <QtGui/QDesktopServices>
 
@@ -397,3 +398,20 @@ bool GetDefault(
 
 } // namespace internal
 } // namespace FileDialog
+
+void Resources::LoadAllData() {
+#ifdef TDESKTOP_USE_PACKED_RESOURCES
+	// Load resources packed into a separated file
+	QStringList paths;
+#ifdef _DEBUG
+	paths += cExeDir();
+#endif
+	paths += QStandardPaths::standardLocations(QStandardPaths::AppDataLocation);
+	for (QString directory : paths) {
+		if (QResource::registerResource(directory + u"/tresources.rcc"_q)) {
+			return;  // found
+		}
+	}
+	qFatal("Packed resources not found");
+#endif
+}
--- a/Telegram/SourceFiles/core/file_utilities.h
+++ b/Telegram/SourceFiles/core/file_utilities.h
@@ -117,3 +117,9 @@ bool GetDefault(
 
 } // namespace internal
 } // namespace FileDialog
+
+namespace Resources {
+
+void LoadAllData();
+
+} // namespace Resources
--- a/Telegram/SourceFiles/core/launcher.cpp
+++ b/Telegram/SourceFiles/core/launcher.cpp
@@ -14,6 +14,7 @@ https://github.com/telegramdesktop/tdesk
 #include "ui/main_queue_processor.h"
 #include "core/crash_reports.h"
 #include "core/update_checker.h"
+#include "core/file_utilities.h"
 #include "core/sandbox.h"
 #include "base/concurrent_timer.h"
 
@@ -286,6 +287,7 @@ void Launcher::init() {
 	initQtMessageLogging();
 
 	QApplication::setApplicationName(qsl("TelegramDesktop"));
+	Resources::LoadAllData();  // should be called after setting an application name
 	QApplication::setAttribute(Qt::AA_DisableHighDpiScaling, true);
 
 	// fallback session management is useless for tdesktop since it doesn't have
--- a/Telegram/cmake/telegram_options.cmake
+++ b/Telegram/cmake/telegram_options.cmake
@@ -9,6 +9,9 @@ set(TDESKTOP_API_ID "0" CACHE STRING "Pr
 set(TDESKTOP_API_HASH "" CACHE STRING "Provide 'api_hash' for the Telegram API access.")
 set(TDESKTOP_LAUNCHER_BASENAME "" CACHE STRING "Desktop file base name (Linux only).")
 
+set(TDESKTOP_RESOURCES "Bundled" CACHE STRING "Determines how to import resource files.")
+set_property(CACHE TDESKTOP_RESOURCES PROPERTY STRINGS "Bundled;Packed")
+
 if (TDESKTOP_API_TEST)
     set(TDESKTOP_API_ID 17349)
     set(TDESKTOP_API_HASH 344583e45741c457fe1862106095a5eb)
