Description: Get rid of hard-coded paths, and eliminate static linking
Author: Nicholas Guriev <guriev-ns@ya.ru>
Date: Mon, 07 Oct 2019 09:30:52 +0300

--- a/Telegram/Resources/qrc/linux.qrc
+++ b/Telegram/Resources/qrc/linux.qrc
@@ -1,6 +1,5 @@
 <RCC>
   <qresource prefix="/qt">
-    <file alias="etc/qt.conf">../etc/qt_linux.conf</file>
   </qresource>
   <qresource prefix="/fc">
     <file alias="fc-custom.conf">../fc-custom.conf</file>
--- a/Telegram/SourceFiles/base/build_config.h
+++ b/Telegram/SourceFiles/base/build_config.h
@@ -47,12 +47,11 @@ https://github.com/telegramdesktop/tdesk
 #define ARCH_CPU_X86_FAMILY 1
 #define ARCH_CPU_X86 1
 #define ARCH_CPU_32_BITS 1
-#elif defined(__aarch64__)
+#elif defined _LP64 || defined _M_X64 || defined _M_ARM64 || defined _M_ALPHA
+// _LP64 is defined by GCC, others by MSVC
 #define ARCH_CPU_64_BITS 1
-#elif defined(_M_ARM) || defined(__arm__)
-#define ARCH_CPU_32_BITS 1
 #else
-#error Please add support for your architecture in base/build_config.h
+#define ARCH_CPU_32_BITS 1
 #endif
 
 #if defined(__GNUC__)
--- a/Telegram/SourceFiles/base/tests_main.cpp
+++ b/Telegram/SourceFiles/base/tests_main.cpp
@@ -7,7 +7,9 @@ https://github.com/telegramdesktop/tdesk
 */
 #define CATCH_CONFIG_RUNNER
 #include "catch.hpp"
-#include "reporters/catch_reporter_compact.hpp"
+#if __has_include("reporters/catch_reporter_compact.hpp")
+# include "reporters/catch_reporter_compact.hpp"
+#endif  // __has_include
 #include <QFile>
 
 int (*TestForkedMethod)()/* = nullptr*/;
--- a/Telegram/SourceFiles/main.cpp
+++ b/Telegram/SourceFiles/main.cpp
@@ -8,6 +8,9 @@ https://github.com/telegramdesktop/tdesk
 #include "core/launcher.h"
 
 int main(int argc, char *argv[]) {
+	// Telegram doesn't start when extraordinary theme is set, see launchpad.net/bugs/1680943
+	unsetenv("QT_QPA_PLATFORMTHEME");
+
 	const auto launcher = Core::Launcher::Create(argc, argv);
 	return launcher ? launcher->exec() : 1;
 }
--- a/Telegram/gyp/PrecompiledHeader.cmake
+++ b/Telegram/gyp/PrecompiledHeader.cmake
@@ -77,6 +77,8 @@ function(export_all_flags _filename _sou
   set(_compile_file_flags "$<$<BOOL:${_compile_file_flags}>:$<JOIN:${_compile_file_flags},\n>\n>")
   set(_compile_flags "$<$<BOOL:${_compile_flags}>:$<JOIN:${_compile_flags},\n>\n>")
   set(_compile_options "$<$<BOOL:${_compile_options}>:$<JOIN:${_compile_options},\n>\n>")
+  get_source_file_property(_file_lang "${_source_name_for_flags}" LANGUAGE)
+  set(_compile_file_flags "${CMAKE_${_file_lang}_FLAGS}\n${_compile_file_flags}")
   file(GENERATE OUTPUT "${_filename}" CONTENT "${_compile_definitions}${_include_directories}${_compile_file_flags}${_compile_flags}${_compile_options}\n")
 endfunction()
 
--- a/Telegram/gyp/common/linux.gypi
+++ b/Telegram/gyp/common/linux.gypi
@@ -8,10 +8,23 @@
   'conditions': [
     [ 'build_linux', {
       'variables': {
+        'variables': {
+          'cpu_type': '<!(uname -m)',
+        },
+        'cpu_type%': '<(cpu_type)',
+        'conditions': [
+          [ 'cpu_type == "x86_64"',
+            { 'disable_lto%': 0 },
+            { 'disable_lto%': 1 },
+          ],
+          [ 'cpu_type == "x86_64" or cpu_type == "aarch64"',
+            { 'bitness%': 64 },
+            { 'bitness%': 32 },
+          ],
+        ],
         'linux_common_flags': [
           '-pipe',
           '-Wall',
-          '-Werror',
           '-W',
           '-fPIC',
           '-Wno-unused-variable',
@@ -51,7 +64,7 @@
         '<(linux_path_breakpad)/lib',
       ],
       'conditions': [
-        [ '"<!(uname -m)" == "x86_64" or "<!(uname -m)" == "aarch64"', {
+        [ 'bitness == 64', {
           'defines': [
             'Q_OS_LINUX64',
           ],
@@ -69,7 +82,7 @@
               'sources': [ '__Wrong_Official_Build_Target_<(official_build_target)_' ],
             }],
           ],
-        }], [ '"<!(uname -p)" == "x86_64"', {
+        }], [ 'not disable_lto', {
           # 32 bit version can't be linked with debug info or LTO,
           # virtual memory exhausted :(
           'cflags_c': [ '-g' ],
@@ -86,7 +99,6 @@
       ],
       'defines': [
         '_REENTRANT',
-        'QT_STATICPLUGIN',
         'QT_PLUGIN',
       ],
       'cflags_c': [
--- a/Telegram/gyp/crl.gyp
+++ b/Telegram/gyp/crl.gyp
@@ -27,12 +27,17 @@
       ],
     }]],
     'variables': {
-      'crl_src_loc': '../ThirdParty/crl/src/crl',
+      'crl_src_loc': '../../debian/crl/src/crl',
       'official_build_target%': '',
     },
     'include_dirs': [
-      '../ThirdParty/crl/src',
+      '../../debian/crl/src',
     ],
+    'direct_dependent_settings': {
+      'include_dirs': [
+        '../../debian/crl/src',
+      ]
+    },
     'sources': [
       '<(crl_src_loc)/common/crl_common_config.h',
       '<(crl_src_loc)/common/crl_common_list.cpp',
--- a/Telegram/gyp/lib_base.gyp
+++ b/Telegram/gyp/lib_base.gyp
@@ -23,9 +23,16 @@
       'submodules_loc': '../ThirdParty',
       'pch_source': '<(src_loc)/base/base_pch.cpp',
       'pch_header': '<(src_loc)/base/base_pch.h',
+      'use_common_xxhash%': 0,
     },
-    'defines': [
-      'XXH_INLINE_ALL',
+    'conditions': [
+      [ 'use_common_xxhash', {
+        'link_settings': {
+          'libraries': [ '-lxxhash' ],
+        },
+      }, {
+        'defines': [ 'XXH_INLINE_ALL' ],
+      }],
     ],
     'dependencies': [
       'crl.gyp:crl',
--- a/Telegram/gyp/lib_lottie.gyp
+++ b/Telegram/gyp/lib_lottie.gyp
@@ -22,23 +22,18 @@
       'submodules_loc': '../ThirdParty',
       'rlottie_loc': '<(submodules_loc)/rlottie/inc',
       'lz4_loc': '<(submodules_loc)/lz4/lib',
+      'use_common_rlottie%': 0,
+      'use_common_lz4%': 0,
     },
     'dependencies': [
       'crl.gyp:crl',
       'lib_base.gyp:lib_base',
-      'lib_rlottie.gyp:lib_rlottie',
       'lib_ffmpeg.gyp:lib_ffmpeg',
-      'lib_lz4.gyp:lib_lz4',
     ],
     'export_dependent_settings': [
       'crl.gyp:crl',
       'lib_base.gyp:lib_base',
-      'lib_rlottie.gyp:lib_rlottie',
       'lib_ffmpeg.gyp:lib_ffmpeg',
-      'lib_lz4.gyp:lib_lz4',
-    ],
-    'defines': [
-      'LOT_BUILD',
     ],
     'include_dirs': [
       '<(src_loc)',
@@ -74,6 +69,17 @@
       'include_dirs': [
         '/usr/local/macold/include/c++/v1',
       ],
+    }], [ 'use_common_rlottie', {
+      'link_settings': { 'libraries': [ 'rlottie' ] },
+    }, {
+      'dependencies': [ 'lib_rlottie.gyp:lib_rlottie' ],
+      'export_dependent_settings': [ 'lib_rlottie.gyp:lib_rlottie' ],
+      'defines': [ 'LOT_BUILD' ],
+    }], [ 'use_common_lz4', {
+      'link_settings': { 'libraries': [ 'lz4' ] },
+    }, {
+      'dependencies': [ 'lib_lz4.gyp:lib_lz4' ],
+      'export_dependent_settings': [ 'lib_lz4.gyp:lib_lz4' ],
     }]],
   }],
 }
--- a/Telegram/gyp/lib_scheme.gyp
+++ b/Telegram/gyp/lib_scheme.gyp
@@ -30,6 +30,8 @@
       'include_dirs': [
         '/usr/local/macold/include/c++/v1',
       ],
+    }], [ 'cpu_type == "mipsel"', {
+      'ld_flags': [ '-mxgot' ],
     }]],
     'include_dirs': [
       '<(src_loc)',
--- a/Telegram/gyp/lib_storage.gyp
+++ b/Telegram/gyp/lib_storage.gyp
@@ -23,10 +23,8 @@
       'submodules_loc': '../ThirdParty',
       'pch_source': '<(src_loc)/storage/storage_pch.cpp',
       'pch_header': '<(src_loc)/storage/storage_pch.h',
+      'use_common_xxhash%': 0,
     },
-    'defines': [
-      'XXH_INLINE_ALL',
-    ],
     'dependencies': [
       'crl.gyp:crl',
       'lib_base.gyp:lib_base',
@@ -88,6 +86,12 @@
         '<(src_loc)/storage/storage_clear_legacy_win.cpp',
         '<(src_loc)/storage/storage_file_lock_win.cpp',
       ],
+    }], [ 'use_common_xxhash', {
+      'link_settings': {
+        'libraries': [ '-lxxhash' ],
+      },
+    }, {
+      'defines': [ 'XXH_INLINE_ALL' ],
     }]],
   }],
 }
--- a/Telegram/gyp/linux_glibc_wraps.gyp
+++ b/Telegram/gyp/linux_glibc_wraps.gyp
@@ -14,7 +14,7 @@
     'sources': [
       '../SourceFiles/platform/linux/linux_glibc_wraps.c',
     ],
-    'conditions': [[ '"<!(uname -m)" == "x86_64" or "<!(uname -m)" == "aarch64"', {
+    'conditions': [[ 'bitness == 64', {
       'sources': [
         '../SourceFiles/platform/linux/linux_glibc_wraps_64.c',
       ],
--- a/Telegram/gyp/modules/qt.gypi
+++ b/Telegram/gyp/modules/qt.gypi
@@ -19,25 +19,13 @@
             ],
           },
           'qt_libs': [
-            'qwebp',
-            'Qt5PrintSupport',
-            'Qt5PlatformSupport',
             'Qt5Network',
             'Qt5Widgets',
             'Qt5Gui',
-            'qtharfbuzzng',
           ],
           'qt_version%': '<(qt_version)',
-          'conditions': [
-            [ 'build_macold', {
-              'linux_path_qt%': '/usr/local/macold/Qt-<(qt_version)',
-            }, {
-              'linux_path_qt%': '/usr/local/tdesktop/Qt-<(qt_version)',
-            }]
-          ]
         },
         'qt_version%': '<(qt_version)',
-        'qt_loc_unix': '<(linux_path_qt)',
         'conditions': [
           [ 'build_win', {
             'qt_lib_prefix': '<(ld_lib_prefix)',
@@ -73,37 +61,18 @@
           }],
           [ 'build_linux', {
             'qt_lib_prefix': 'lib',
-            'qt_lib_debug_postfix': '.a',
-            'qt_lib_release_postfix': '.a',
+            'qt_lib_debug_postfix': '.so',
+            'qt_lib_release_postfix': '.so',
             'qt_libs': [
-              'qxcb',
-              'Qt5XcbQpa',
-              'qconnmanbearer',
-              'qgenericbearer',
-              'qnmbearer',
               '<@(qt_libs)',
               'Qt5DBus',
               'Qt5Core',
-              'qtpcre',
-              'Xi',
-              'Xext',
-              'Xfixes',
-              'SM',
-              'ICE',
-              'fontconfig',
-              'expat',
-              'freetype',
               'z',
-              'xcb-shm',
-              'xcb-xfixes',
-              'xcb-render',
-              'xcb-static',
             ],
           }],
         ],
       },
       'qt_version%': '<(qt_version)',
-      'qt_loc_unix': '<(qt_loc_unix)',
       'qt_version_loc': '<!(python -c "print(\'<(qt_version)\'.replace(\'.\', \'_\'))")',
       'qt_libs_debug': [
         '<!@(python -c "for s in \'<@(qt_libs)\'.split(\' \'): print(\'<(qt_lib_prefix)\' + s + \'<(qt_lib_debug_postfix)\')")',
@@ -111,24 +80,33 @@
       'qt_libs_release': [
         '<!@(python -c "for s in \'<@(qt_libs)\'.split(\' \'): print(\'<(qt_lib_prefix)\' + s + \'<(qt_lib_release_postfix)\')")',
       ],
+      'conditions': [
+        [ 'build_win', {
+          'qt_loc%': '<(DEPTH)/../../../Libraries/qt<(qt_version_loc)/qtbase',
+        }],
+        [ 'build_macold', {
+          'qt_loc%': '/usr/local/macold/Qt-<(qt_version)',
+        }, {
+          'qt_loc%': '/usr/local/tdesktop/Qt-<(qt_version)',
+        }]
+      ],
     },
     'qt_libs_debug': [ '<@(qt_libs_debug)' ],
     'qt_libs_release': [ '<@(qt_libs_release)' ],
     'qt_version%': '<(qt_version)',
-    'conditions': [
-      [ 'build_win', {
-        'qt_loc': '<(DEPTH)/../../../Libraries/qt<(qt_version_loc)/qtbase',
-      }, {
-        'qt_loc': '<(qt_loc_unix)',
-      }],
-    ],
+
+    'qt_incdir%': '<(qt_loc)/include',
+    'qt_libdir%': '<(qt_loc)/lib',
+    'qt_bindir%': '<(qt_loc)/bin',
+    'qt_plugins%': '<(qt_loc)/plugins',
+    'qt_specs%': '<(qt_loc)/mkspecs',
 
     # If you need moc sources include a line in your 'sources':
     # '<!@(python <(DEPTH)/list_sources.py [sources] <(qt_moc_list_sources_arg))'
     # where [sources] contains all your source files
     'qt_moc_list_sources_arg': '--moc-prefix SHARED_INTERMEDIATE_DIR/<(_target_name)/moc/moc_',
 
-    'linux_path_xkbcommon%': '/usr/local',
+    'linux_lib_xkbcommon%': '/usr/local/lib/libxkbcommon.a',
     'linux_lib_ssl%': '/usr/local/ssl/lib/libssl.a',
     'linux_lib_crypto%': '/usr/local/ssl/lib/libcrypto.a',
     'linux_lib_icu%': 'libicutu.a libicui18n.a libicuuc.a libicudata.a',
@@ -180,21 +158,20 @@
   },
 
   'include_dirs': [
-    '<(qt_loc)/include',
-    '<(qt_loc)/include/QtCore',
-    '<(qt_loc)/include/QtGui',
-    '<(qt_loc)/include/QtDBus',
-    '<(qt_loc)/include/QtCore/<(qt_version)',
-    '<(qt_loc)/include/QtGui/<(qt_version)',
-    '<(qt_loc)/include/QtCore/<(qt_version)/QtCore',
-    '<(qt_loc)/include/QtGui/<(qt_version)/QtGui',
+    '<(qt_incdir)',
+    '<(qt_incdir)/QtCore',
+    '<(qt_incdir)/QtGui',
+    '<(qt_incdir)/QtDBus',
+    '<(qt_incdir)/QtCore/<(qt_version)',
+    '<(qt_incdir)/QtGui/<(qt_version)',
+    '<(qt_incdir)/QtCore/<(qt_version)/QtCore',
+    '<(qt_incdir)/QtGui/<(qt_version)/QtGui',
   ],
   'library_dirs': [
-    '<(qt_loc)/lib',
-    '<(qt_loc)/plugins',
-    '<(qt_loc)/plugins/bearer',
-    '<(qt_loc)/plugins/platforms',
-    '<(qt_loc)/plugins/imageformats',
+    '<(qt_libdir)',
+    '<(qt_plugins)/bearer',
+    '<(qt_plugins)/platforms',
+    '<(qt_plugins)/imageformats',
   ],
   'defines': [
     'QT_WIDGETS_LIB',
@@ -204,30 +181,21 @@
   ],
   'conditions': [
     [ 'build_linux', {
-      'dependencies': [
-        '<(DEPTH)/linux_glibc_wraps.gyp:linux_glibc_wraps',
-      ],
       'library_dirs': [
-        '<(qt_loc)/plugins/platforminputcontexts',
+        '<(qt_plugins)/platforminputcontexts',
       ],
       'libraries': [
-        '<(PRODUCT_DIR)/obj.target/liblinux_glibc_wraps.a',
-        '<(linux_path_xkbcommon)/lib/libxkbcommon.a',
+        '<(linux_lib_xkbcommon)',
         '<@(qt_libs_release)',
         '<(linux_lib_ssl)',
         '<(linux_lib_crypto)',
         '<!@(python -c "for s in \'<(linux_lib_icu)\'.split(\' \'): print(s)")',
-        '-lxcb',
         '-lX11',
-        '-lX11-xcb',
-        '-ldbus-1',
         '-ldl',
-        '-lgthread-2.0',
         '-lglib-2.0',
-        '-lpthread',
       ],
       'include_dirs': [
-        '<(qt_loc)/mkspecs/linux-g++',
+        '<(qt_specs)/linux-g++',
       ],
       'ldflags': [
         '-static-libstdc++',
--- a/Telegram/gyp/modules/qt_moc.gypi
+++ b/Telegram/gyp/modules/qt_moc.gypi
@@ -15,7 +15,7 @@
       '<(SHARED_INTERMEDIATE_DIR)/<(_target_name)/moc/moc_<(RULE_INPUT_ROOT).cpp',
     ],
     'action': [
-      '<(qt_loc)/bin/moc<(exe_ext)',
+      '<(qt_bindir)/moc<(exe_ext)',
 
       # Silence "Note: No relevant classes found. No output generated."
       '--no-notes',
--- a/Telegram/gyp/modules/qt_rcc.gypi
+++ b/Telegram/gyp/modules/qt_rcc.gypi
@@ -15,7 +15,7 @@
       '<(SHARED_INTERMEDIATE_DIR)/<(_target_name)/qrc/qrc_<(RULE_INPUT_ROOT).cpp',
     ],
     'action': [
-      '<(qt_loc)/bin/rcc<(exe_ext)',
+      '<(qt_bindir)/rcc<(exe_ext)',
       '-name', '<(RULE_INPUT_ROOT)',
       '-no-compress',
       '<(RULE_INPUT_PATH)',
--- a/Telegram/gyp/telegram/linux.gypi
+++ b/Telegram/gyp/telegram/linux.gypi
@@ -10,6 +10,7 @@
       'variables': {
         'build_defines%': '',
       },
+      'cpu_type%': '<!(uname -m)',
       'not_need_gtk%': '<!(python -c "print(\'TDESKTOP_DISABLE_GTK_INTEGRATION\' in \'<(build_defines)\')")',
       'pkgconfig_libs': [
 # In order to work libxkbcommon must be linked statically,
@@ -20,12 +21,6 @@
       ],
     },
     'libraries': [
-      '-lbreakpad_client',
-      '-lcomposeplatforminputcontextplugin',
-      '-libusplatforminputcontextplugin',
-      '-lfcitxplatforminputcontextplugin',
-      '-lhimeplatforminputcontextplugin',
-      '-lnimfplatforminputcontextplugin',
       '-llzma',
       '-lopenal',
       '-lavformat',
@@ -34,12 +29,9 @@
       '-lswscale',
       '-lavutil',
       '-lopus',
-      '-lva-x11',
-      '-lva-drm',
-      '-lva',
-      '-lvdpau',
-      '-ldrm',
       '-lz',
+      '-ltgvoip',
+      '-lminizip',
 #      '<!(pkg-config 2> /dev/null --libs <@(pkgconfig_libs))',
     ],
     'cflags_cc': [
@@ -47,37 +39,23 @@
       '-Wno-maybe-uninitialized',
     ],
     'ldflags': [
-      '-Wl,-wrap,aligned_alloc',
-      '-Wl,-wrap,secure_getenv',
-      '-Wl,-wrap,clock_gettime',
       '-Wl,--no-as-needed,-lrt',
-      '-Wl,-Bstatic',
     ],
     'configurations': {
       'Release': {
         'cflags_c': [
-          '-Ofast',
           '-fno-strict-aliasing',
         ],
         'cflags_cc': [
-          '-Ofast',
           '-fno-strict-aliasing',
         ],
-        'ldflags': [
-          '-Ofast',
-        ],
       },
     },
     'conditions': [
-      [ '"<!(uname -p)" != "x86_64"', {
-        'ldflags': [
-          '-Wl,-wrap,__divmoddi4',
-        ],
-      }], ['not_need_gtk!="True"', {
+      ['not_need_gtk!="True"', {
         'cflags_cc': [
-          '<!(pkg-config 2> /dev/null --cflags gtk+-2.0)',
-          '<!(pkg-config 2> /dev/null --cflags glib-2.0)',
-          '<!(pkg-config 2> /dev/null --cflags dee-1.0)',
+          '<!(pkg-config --cflags gtk+-2.0)',
+          '<!(pkg-config --cflags glib-2.0)',
         ],
       }], ['<!(pkg-config ayatana-appindicator3-0.1; echo $?) == 0', {
         'cflags_cc': [ '<!(pkg-config --cflags ayatana-appindicator3-0.1)' ],
--- a/Telegram/gyp/telegram/sources.txt
+++ b/Telegram/gyp/telegram/sources.txt
@@ -859,18 +859,9 @@
 <(src_loc)/mainwindow.h
 <(src_loc)/observer_peer.cpp
 <(src_loc)/observer_peer.h
-<(src_loc)/qt_static_plugins.cpp
 <(src_loc)/settings.cpp
 <(src_loc)/settings.h
-
-platforms: !win
-<(minizip_loc)/crypt.h
-<(minizip_loc)/ioapi.c
-<(minizip_loc)/ioapi.h
-<(minizip_loc)/zip.c
-<(minizip_loc)/zip.h
-<(minizip_loc)/unzip.c
-<(minizip_loc)/unzip.h
+../../debian/qt_functions.cpp
 
 platforms: win
 <(res_loc)/winrc/Telegram.rc
--- a/Telegram/gyp/telegram/telegram.gypi
+++ b/Telegram/gyp/telegram/telegram.gypi
@@ -47,6 +47,7 @@
         'pt-BR',
       ],
       'build_defines%': '',
+      'use_common_xxhash%': 0,
       'list_sources_command': 'python <(DEPTH)/list_sources.py --input <(DEPTH)/telegram/sources.txt --replace src_loc=<(src_loc)',
       'pch_source': '<(src_loc)/stdafx.cpp',
       'pch_header': '<(src_loc)/stdafx.h',
@@ -72,8 +73,6 @@
       'codegen.gyp:codegen_numbers',
       'codegen.gyp:codegen_style',
       'tests/tests.gyp:tests',
-      'utils.gyp:Updater',
-      '../ThirdParty/libtgvoip/libtgvoip.gyp:libtgvoip',
       'crl.gyp:crl',
       'lib_base.gyp:lib_base',
       'lib_export.gyp:lib_export',
@@ -88,7 +87,6 @@
       'AL_LIBTYPE_STATIC',
       'AL_ALEXT_PROTOTYPES',
       'TGVOIP_USE_CXX11_LIB',
-      'XXH_INLINE_ALL',
       'TDESKTOP_API_ID=<(api_id)',
       'TDESKTOP_API_HASH=<(api_hash)',
       '<!@(python -c "for s in \'<(build_defines)\'.split(\',\'): print(s)")',
@@ -111,6 +109,7 @@
       '<(submodules_loc)/variant/include',
       '<(submodules_loc)/crl/src',
       '<(submodules_loc)/xxHash',
+      '/usr/include/libtgvoip',
     ],
     'sources': [
       '<@(qrc_files)',
@@ -134,6 +133,7 @@
         ],
         'dependencies': [
           'utils.gyp:Packer',
+          'utils.gyp:Updater',
         ],
       }], [ 'build_mac', {
         'mac_hardened_runtime': 1,
@@ -155,6 +155,10 @@
         'sources': [
           '../../Telegram/Telegram Desktop.entitlements',
         ],
+      }], [ 'use_common_xxhash', {
+        'libraries': [ '-lxxhash' ],
+      }, {
+        'defines': [ 'XXH_INLINE_ALL' ],
       }],
     ],
   }],
