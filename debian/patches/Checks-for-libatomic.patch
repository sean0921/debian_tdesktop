Description: Check whether __atomic_compare_exchange_1 from libatomic is needed.
 This should fix build on riscv64. The resulting binary has not been tested yet.
Author: Nicholas Guriev <guriev-ns@ya.ru>
Date: Fri, 08 May 2020 23:18:44 +0300

--- a/Telegram/CMakeLists.txt
+++ b/Telegram/CMakeLists.txt
@@ -127,12 +127,24 @@ PRIVATE
 )
 
 # Telegram uses long atomic types, so on some architectures libatomic is needed.
-check_cxx_source_compiles("
-#include <atomic>
-std::atomic_int64_t foo;
-int main() {return foo;}
-" HAVE_LONG_ATOMIC_WITHOUT_LIB)
-if (NOT HAVE_LONG_ATOMIC_WITHOUT_LIB)
+check_cxx_source_compiles([[
+    #include <atomic>
+    std::atomic_int64_t foo;
+    int main() {return foo;}
+]] HAVE_NATIVE_LONG_ATOMIC)
+if (NOT HAVE_NATIVE_LONG_ATOMIC)
+    target_link_libraries(Telegram PRIVATE atomic)
+endif()
+
+# Somewhere compare_exchange_strong is used for a byte, so
+# at least on riscv64 linking against libatomic is required.
+check_cxx_source_compiles([[
+    #include <atomic>
+    std::atomic<bool> a; bool x, y;
+    int main() {a.compare_exchange_strong(x, y);}
+]] HAVE_NATIVE_BYTE_ATOMIC)
+if (NOT HAVE_NATIVE_BYTE_ATOMIC)
+    target_link_libraries(codegen_style PRIVATE atomic)
     target_link_libraries(Telegram PRIVATE atomic)
 endif()
 
